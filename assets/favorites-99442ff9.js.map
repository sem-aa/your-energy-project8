{"version":3,"file":"favorites-99442ff9.js","sources":["../../src/services/api.js","../../src/helpers/markup.js","../../src/services/local-storage.js","../../src/helpers/functions.js","../../src/js/partials/favorites.js"],"sourcesContent":["import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://your-energy.b.goit.study/api/';\r\n\r\nexport const getPhraseDay = async () => {\r\n  const res = await axios.get('quote');\r\n  return res.data;\r\n};\r\n\r\nexport const getFilters = async ({\r\n  filter = '',\r\n  page = 1,\r\n  limit = 12,\r\n} = {}) => {\r\n  try {\r\n    const res = await axios.get(\r\n      `filters?filter=${filter}&page=${page}&limit=${limit}`\r\n    );\r\n    return res.data;\r\n  } catch (error) {\r\n    console.error('Error in getFilters:', error);\r\n  }\r\n};\r\n\r\nexport const getExercises = async ({\r\n  bodypart = '',\r\n  muscles = '',\r\n  equipment = '',\r\n  keyword = '',\r\n  page = 1,\r\n  limit = 10,\r\n} = {}) => {\r\n  try {\r\n    const res = await axios.get(\r\n      `exercises?bodypart=${bodypart}&muscles=${muscles}&equipment=${equipment}&keyword=${keyword}&page=${page}&limit=${limit}`\r\n    );\r\n    return res.data;\r\n  } catch (error) {\r\n    console.error('Error in getExercises:', error);\r\n  }\r\n};\r\n\r\nexport const getExerciseId = async exerciseId => {\r\n  try {\r\n    const res = await axios.get(`exercises/${exerciseId}`);\r\n    return res.data;\r\n  } catch (error) {\r\n    console.error('Error in getExerciseId:', error);\r\n  }\r\n};\r\n\r\nexport const updateRaring = async (exerciseId, obj) => {\r\n  try {\r\n    const res = await axios.patch(`exercises/${exerciseId}/rating`, obj);\r\n    return res.data;\r\n  } catch (error) {\r\n    console.error('Error in getExerciseId:', error);\r\n  }\r\n};\r\n\r\nexport const subscribe = async email => {\r\n  try {\r\n    const res = await axios.post('subscription', email);\r\n    return res;\r\n  } catch (error) {\r\n    console.error('Error in subscribe:', error);\r\n    return error.response;\r\n  }\r\n};\r\n","import { createShortStringFavorites, createShortTitle } from '../js/partials/favorites';\n\nconst createMarkupForChangableIcon = isFavorite => {\n  const markupForIcon = isFavorite\n    ? '<button type=\"button\" class=\"remove-btn\" id=\"remove-favorite-btn\"><svg class=\"changeble-icon\" width=\"16\" height=\"16\"><use href=\"/oleksii-symbol-defs.svg#icon-trash\"></use></svg></button>'\n    : '<div class=\"icon-rating-container\"><p class=\"rating-info-card\">4.0</p><svg class=\"changeble-icon\" width=\"18\" height=\"18\"><use href=\"/oleksii-symbol-defs.svg#icon-star\"></use></svg></div>';\n\n  return markupForIcon;\n};\n\nexport const createInfoCardMarkup = (cardData, isFavorite = false) => {\n  const { name, burnedCalories, bodyPart, target, _id, time, gifUrl } =\n    cardData;\n\n  return `<li class=\"favorite-info-card\" data-id=${_id}>\n  \n      <div class=\"card-header\">\n        <div class=\"category-and-icon\">\n          <div class=\"category-tag\"><p>Workout</p></div>\n          ${createMarkupForChangableIcon(isFavorite)}\n        </div>\n        <div>\n          <button type=\"button\" class=\"start-btn\">\n            <p>Start</p>\n            <svg width=\"16\" height=\"16\">\n              <use href=\"/oleksii-symbol-defs.svg#icon-arrow\"></use>\n            </svg>\n          </button>\n        </div>\n      </div>\n      <div class=\"card-title-container\">\n         <svg width=\"24\" height=\"24\">\n          <use href=\"/oleksii-symbol-defs.svg#icon-man\"></use>\n        </svg>\n        <h3 class=\"card-title\">${createShortTitle(`${name}`)}</h3>\n      </div>\n<div class=\"gif-container\"><img src='${gifUrl}' alt=\"${name} gif\"/>\n  </div>\n      <ul class=\"card-info-list\">\n        <li>\n          <p class=\"item-text\">\n            Burned kcal: <em class=\"hidden-overflow-text\">${createShortStringFavorites(\n              `${burnedCalories}/${time}`\n            )}<strong>min</strong></em>\n          </p>\n        </li>\n        <li>\n          <p class=\"item-text\">Body part: <em class=\"hidden-overflow-text\">${createShortStringFavorites(\n            `${bodyPart}`\n          )}</em></p>\n        </li>\n        <li>\n          <p class=\"item-text\" id=\"exercise-info-text\">Target: <em class=\"hidden-overflow-text\">${createShortStringFavorites(\n            `${target}`\n          )}</em></p>\n        </li>\n      </ul>\n    </li>`;\n};\n\nexport const createCategoryCardListMarkup = data => {\n  return data.results\n    .map(({ imgURL, name, filter }) => {\n      return `            \n        <li class=\"exercises_category-item\" data-category=\"${name}\" data-filter=\"${filter}\"\n        style=\"\n          background-image: linear-gradient(\n              0deg,\n              rgba(17, 17, 17, 0.5) 0%,\n              rgba(17, 17, 17, 0.5) 100%\n            ),\n            url(${imgURL});\n          background-repeat: no-repeat;\n          background-position: 50% 50%;\n          background-size: cover;\n        \"\n        >\n            <div class=\"exercises_category-descr\">\n                <h3 class=\"exercises_category-title\">${name}</h3>\n                <p class=\"exercises_category-text\">${filter}</p>   \n            </div>\n      </li>`;\n    })\n    .join('');\n};\n\nexport const createPaginationMarkup = (data, filter) => {\n  let pagesArray = [];\n\n  for (let page = 1; page <= data.totalPages; page++) {\n    let current = page.toString() === data.page.toString() ? 'current' : '';\n\n    pagesArray.push(` <li class=\"exercises_pagination-item ${current}\">\n        <a class=\"page-num\" data-page=\"${page}\" data-filter=\"${filter}\">${page}</a>\n      </li>`);\n  }\n\n  return pagesArray.join('');\n};\n","export const saveToLocal = (key, obj) => {\r\n  try {\r\n    localStorage.setItem(key, JSON.stringify(obj));\r\n  } catch (error) {\r\n    console.error('Error save localStorage:', error);\r\n  }\r\n};\r\n\r\nexport const getFromLocal = key => {\r\n  try {\r\n    const storedItem = localStorage.getItem(key);\r\n\r\n    if (storedItem) {\r\n      return JSON.parse(storedItem);\r\n    }\r\n\r\n    return null;\r\n  } catch (error) {\r\n    console.error('Error get localStorage:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const deleteInLocal = key => {\r\n  try {\r\n    localStorage.removeItem(key);\r\n  } catch (error) {\r\n    console.error('Error delete localStorage:', error);\r\n  }\r\n};\r\n","import { getFromLocal, saveToLocal } from '../services/local-storage';\r\n\r\nexport const removeFavoriteCardFromLocal = removedId => {\r\n  const prevFavoriteCards = getFromLocal(KEY_STORAGE.favorites);\r\n  if (!prevFavoriteCards) {\r\n    alert('Oops! Refresh page');\r\n    return;\r\n  }\r\n  const newFavoriteCards = prevFavoriteCards.filter(\r\n    ({ _id }) => _id !== removedId\r\n  );\r\n\r\n  saveToLocal(KEY_STORAGE.favorites, newFavoriteCards);\r\n};\r\n\r\nexport const handleClickFavoritesBtn = cardData => {\r\n  if (!getFromLocal('favorites')) {\r\n    addFavoriteCardToLocal(cardData);\r\n    return;\r\n  }\r\n\r\n  removeFavoriteCardFromLocal(cardData._id);\r\n  return;\r\n};\r\n\r\nexport const addFavoriteCardToLocal = ({\r\n  name,\r\n  burnedCalories,\r\n  bodyPart,\r\n  target,\r\n  _id,\r\n  time,\r\n  gifUrl,\r\n}) => {\r\n  const prevFavoriteCards = getFromLocal(KEY_STORAGE.favorites) || [];\r\n\r\n  const newFavoriteCards = [\r\n    ...prevFavoriteCards,\r\n    {\r\n      name,\r\n      burnedCalories,\r\n      bodyPart,\r\n      target,\r\n      _id,\r\n      time,\r\n      gifUrl,\r\n    },\r\n  ];\r\n\r\n  saveToLocal('favorites', newFavoriteCards);\r\n};\r\n","import { getExercises } from '../../services/api';\nimport { createInfoCardMarkup } from '../../helpers/markup';\nimport { removeFavoriteCardFromLocal } from '../../helpers/functions';\n\nconst favoritesList = document.getElementById('favorite-cards-list');\nconst noCardsText = document.querySelector('.text-nocard-container');\nconst containerForList = document.querySelector('.scrollbar-container');\n\nconst handleDeleteFavoriteCard = ({ target }) => {\n  if (!target.closest('#remove-favorite-btn')) return;\n  const id = target.closest('[data-id=\"64f389465ae26083f39b17b7\"]').dataset.id;\n  console.log(id);\n  removeFavoriteCardFromLocal(id);\n};\n\nconst createListOfCards = array => {\n  return array.map(item => createInfoCardMarkup(item, true)).join('');\n};\n\nexport const createShortStringFavorites = (string = '') => {\n  if (string.length > 4 && window.innerWidth < 1440) {\n    return `${string.slice(0, 4)} ...`;\n  }\n  return string;\n};\n\nexport const createShortTitle = (title = '') => {\n  const arrayOfWords = title.split(' ');\n\n  if (title !== '' && arrayOfWords.length > 3) {\n    return arrayOfWords.splice(0, 3).join(' ') + ' ...';\n  }\n  return title;\n};\n\nconst createCardsMarkupList = async list => {\n  try {\n    const { results } = await getExercises();\n\n    if (results.length === 0) {\n      containerForList?.classList.add('hidden');\n      noCardsText?.classList.remove('hidden');\n\n      return;\n    }\n    noCardsText?.classList.add('hidden');\n    containerForList?.classList.remove('hidden');\n\n    const exerciseCardInfoText = document.getElementById('exercise-info-text');\n\n    list?.insertAdjacentHTML('beforeend', createListOfCards(results));\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\ncreateCardsMarkupList(favoritesList);\n\nfavoritesList?.addEventListener('click', handleDeleteFavoriteCard);\n"],"names":["axios","getFilters","filter","page","limit","error","getExercises","bodypart","muscles","equipment","keyword","getExerciseId","exerciseId","subscribe","email","createMarkupForChangableIcon","isFavorite","createInfoCardMarkup","cardData","name","burnedCalories","bodyPart","target","_id","time","gifUrl","createShortTitle","createShortStringFavorites","createCategoryCardListMarkup","data","imgURL","createPaginationMarkup","pagesArray","current","saveToLocal","key","obj","getFromLocal","storedItem","removeFavoriteCardFromLocal","removedId","prevFavoriteCards","newFavoriteCards","addFavoriteCardToLocal","favoritesList","noCardsText","containerForList","handleDeleteFavoriteCard","id","createListOfCards","array","item","string","title","arrayOfWords","createCardsMarkupList","list","results","exerciseCardInfoText"],"mappings":"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"}